diff --git a/index.js b/index.js
index 79732d56121b5624fc37ba9a73d0f648b1619a97..86f67122d2ce859a793475fae49a1e0ea82f05bb 100644
--- a/index.js
+++ b/index.js
@@ -70,7 +70,9 @@ class Package {
    */
   static lazy(ref, dir = ".") {
     if (typeof ref === "string") {
-      const location = path.resolve(path.basename(ref) === "package.json" ? path.dirname(ref) : ref);
+      const location = path.resolve(
+        path.basename(ref) === "package.json" ? path.dirname(ref) : ref
+      );
       const manifest = loadJsonFile.sync(path.join(location, "package.json"));
 
       return new Package(manifest, location);
@@ -92,7 +94,11 @@ class Package {
    */
   constructor(pkg, location, rootPath = location) {
     // npa will throw an error if the name is invalid
-    const resolved = npa.resolve(pkg.name, `file:${path.relative(rootPath, location)}`, rootPath);
+    const resolved = npa.resolve(
+      pkg.name,
+      `file:${path.relative(rootPath, location)}`,
+      rootPath
+    );
 
     this.name = pkg.name;
     this[PKG] = pkg;
@@ -274,6 +280,11 @@ class Package {
     if (resolved.registry || resolved.type === "directory") {
       // a version (1.2.3) OR range (^1.2.3) OR directory (file:../foo-pkg)
       depCollection[depName] = `${savePrefix}${depVersion}`;
+
+      // https://github.com/lerna/lerna/pull/2450
+      if (resolved.explicitWorkspace) {
+        depCollection[depName] = `workspace:${depCollection[depName]}`;
+      }
     } else if (resolved.gitCommittish) {
       // a git url with matching committish (#v1.2.3 or #1.2.3)
       const [tagPrefix] = /^\D*/.exec(resolved.gitCommittish);
@@ -283,14 +294,20 @@ class Package {
       hosted.committish = `${tagPrefix}${depVersion}`;
 
       // always serialize the full url (identical to previous resolved.saveSpec)
-      depCollection[depName] = hosted.toString({ noGitPlus: false, noCommittish: false });
+      depCollection[depName] = hosted.toString({
+        noGitPlus: false,
+        noCommittish: false,
+      });
     } else if (resolved.gitRange) {
       // a git url with matching gitRange (#semver:^1.2.3)
       const { hosted } = resolved; // take that, lint!
       hosted.committish = `semver:${savePrefix}${depVersion}`;
 
       // always serialize the full url (identical to previous resolved.saveSpec)
-      depCollection[depName] = hosted.toString({ noGitPlus: false, noCommittish: false });
+      depCollection[depName] = hosted.toString({
+        noGitPlus: false,
+        noCommittish: false,
+      });
     }
   }
 }
